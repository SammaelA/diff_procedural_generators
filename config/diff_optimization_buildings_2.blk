{
  memetic_classic
  {
    total_function_calls:i = 5000
    population_size:i = 24
    tournament_size:i = 12
    mutation_chance:r = 0.3
    mutation_power:r = 0.2
    local_search_iterations:i = 33
    local_search_learning_rate:r = 0.01
    start_search_iterations:i = 50
    start_search_learning_rate:r = 0.01
    recreation_diversity_thr:r = 2
    depth_reg_q:r = 0.0
    min_iter_between_recreations:i = 150
  }

  adam
  {
    iterations:i = 250
    learning_rate:r = 0.01
    verbose:b = true
    initial_params:arr = {2, 2, 0.05, 0.6, 0.2, 2, 5, 1, 5, 409, 1, 3, 21, 0.6, 0.07, 0.04, 0.1, 0.04, 15, 0.03, 
                          3, 2, 2, 0.6, 0.6, 0.8, 1, 1, 3, 0, 0.6, 0.7, 0.7, 1, 0.4, 0.5, 0.015, 0.05, 1, 3, 2, 
                          2, 0.6, 0.6, 0.8, 1, 0.4, 0.6, 1, 0.15, 0.1, 0.15,
                          -0.4, 0.07, 2, 0, 0.5, 0, 0.000, 10.500, 10.000, 1.000, 00.000, 0.1}
  }
  
  procedural_generator:s = "buildings_2"

  //a .blk file describing parameters for scene, such as camera position, light etc.
  scene_description:s = "diff_gen_scene_parameters_description.blk"


  //if synthetic_reference is true, reference image will be ignored. Instead of it, a model with reference_params
  //will be created, rendered and saved to file. This new file will be used as reference for texture_optimization
  //reference_params contains model paramters and reference_scene contains scene parameters
  synthetic_reference:b = false
  reference_params:arr = {2, 2, 0.05, 0.6, 0.2, 2, 5, 1, 5, 409, 1, 3, 21, 0.6, 0.07, 0.04, 0.1, 0.04, 15, 0.03, 3, 2, 2, 0.6, 0.6, 0.8, 1, 1, 3, 0, 0.6, 0.7, 0.7, 1, 0.4, 0.5, 0.015, 0.05, 1, 3, 2, 2, 0.6, 0.6, 0.8, 1, 0.4, 0.6, 1, 0.15, 0.1, 0.15}
  reference_scene:arr = {-0.4, 0.07, 2, 0, 0.5, 0, 0.000, 10.500, 10.000, 1.000, 00.000, 0.1}
  reference_image_size:i = 1024

  regularization_alpha:r = 0.02
  original_reference_size:i = 1024
  model_material:s = "" //leave empty to autoselect material (will take a few minutes)
  save_intermediate_images:b = true

  silhouette_optimization_settings
  {
    optimization_stages:i = 1

    stage_10
    {
      optimizer:s = "grid_search_adam"
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 4
      optimizer_settings
      {
        start_points_count:i = 32
        local_search_iterations:i = 100
        local_search_learning_rate:r = 0.01
        grid_params_gradient_mult:r = 1
        verbose:b = true
        initial_params:arr = {2, 
                              2, 
                              0.05, 
                              0.2, 0.1, 
                              2, 6, 1, 
                              4, 170, 1, 
                              2, 5, 1, 
                              0.08, 0.08, 0.1, 
                              0.01, 0.4, 0.1, 0.05, 0.25,
                              1, 2, 1, 0.6, 0.6, 0.6, 1, 
                              1, 3, 0, 0.6, 0.7, 0.6, 1.25, 
                              0.4, 0.5, 0.015, 0.05, 1, 
                              3, 1, 2, 0.6, 0.6, 0.6, 1, 
                              0.1, 0.6, 1, 0.15, 
                              0.1, 0.15,
                              0.25, 0.2,
                              0.5, 0.35, 2, 0, -2.5, 0, 0.000, 10.500, 10.000, 1.000, 00.000, 0.1, 0.4}
        grid
        {
          translation_x
          {
            values:arr = {-0.2, -0.3, 0.5}
          }
          translation_y
          {
            values:arr = {0, 0.25, 0.5, 0.75}
          }
          translation_z
          {
            values:arr = {1, 2, 3, 4}
          }
          rotate_y
          {
            values:arr = {0.3, 0.4, 0.5, 0.6, 2.9, 3.1, 3.3}
          }
          F_BUILDING_HEIGHT
          {
            values:arr = {0.2, 0.4, 0.6}
          }
          F_BUILDING_WIDTH
          {
            values:arr = {0.2, 0.4}
          }
        }
      }
    }

    stage_1
    {
      optimizer:s = "grid_search_adam"
      model_quality:i = 0
      render_image_size:i = 256
      spp:i = 4
      optimizer_settings
      {
        start_points_count:i = 10
        local_search_iterations:i = 100
        local_search_learning_rate:r = 0.01
        grid_params_gradient_mult:r = 0.1
        verbose:b = true
        grid
        {
          camera_fov
          {
            values:arr = {0.1, 0.2, 0.3, 0.4, 0.5, 0.65, 0.85}
          }
        }
      }
    }

    stage_2
    {
      optimizer:s = "adam"
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 32
      optimizer_settings
      {
        iterations:i = 50
        learning_rate:r = 0.001
        verbose:b = true
        initial_params:arr =   {2.000, 5.000, 0.050, 0.600, 0.200, 2.000, 5.000, 1.000, 5.000, 409.000, 1.000, 3.000, 21.000, 0.600, 0.070, 0.040, 0.100, 0.001, 0.001, 0.000, 3.000, 2.000, 2.000, 0.600, 0.600, 0.800, 1.000, 1.000, 3.000, 0.000, 0.600, 0.700, 0.700, 1.000, 0.400, 0.500, 0.015, 0.050, 1.000, 3.000, 2.000, 2.000, 0.600, 0.600, 0.800, 1.000, 0.400, 0.600, 1.000, 0.150, 0.100, 0.150, 0.290, 0.400, 0.445, 0.334, 3.021, -0.100, 2.373, 0.061, 510.403, 6.013, 26.971, 1.000, 56.560, 0.900, 0.400}
      
      }
    }

    stage_0
    {
      optimizer:s = "memetic_classic"
      model_quality:i = 1
      render_image_size:i = 256
      spp:i = 4
      reference_texture_name:s = "mask_1"
      do_not_optimize_parameters:arr = {"F_BUILDING_HEIGHT", "F_BUILDING_WIDTH",
                                        "F_ROOF_BASE_HEIGHT_Q", "F_ROOF_HEIGHT_Q",
                                        "F_ROOF_OVERSIZE_Z", "F_ROOF_OVERSIZE_X", "F_ROOF_SIDE_SLOPE_SIZE",
                                        "translation_x", "translation_y", "translation_z",
                                        "rotate_x", "rotate_y", "rotate_z", "camera_fov"}

      optimizer_settings
      { 
        verbose:b = true
        total_function_calls:i = 2000
        population_size:i = 25
        tournament_size:i = 16
        mutation_chance:r = 0.3
        mutation_power:r = 0.2
        local_search_iterations:i = 33
        local_search_learning_rate:r = 0.02
        start_search_iterations:i = 50
        start_search_learning_rate:r = 0.04
        recreation_diversity_thr:r = 3.0
        depth_reg_q:r = 0.0
        min_iter_between_recreations:i = 150
        //initial_params:arr = {2.000, 5.000, 0.050, 0.600, 0.200, 2.000, 5.000, 1.000, 5.000, 409.000, 1.000, 3.000, 21.000, 0.600, 0.070, 0.040, 0.100, 0.016, 0.098, 0.000, 3.000, 2.000, 2.000, 0.600, 0.600, 0.800, 1.000, 1.000, 3.000, 0.000, 0.600, 0.700, 0.700, 1.000, 0.400, 0.500, 0.015, 0.050, 1.000, 3.000, 2.000, 2.000, 0.600, 0.600, 0.800, 1.000, 0.400, 0.600, 1.000, 0.150, 0.100, 0.150, 0.590, 0.239, -0.391, 0.006, 1.038, 0.074, 0.529, -0.004, 510.403, 6.013, 26.971, 1.000, 56.560, 0.900, 0.250}
        //initial_params:arr =   {2.000, 5.000, 0.050, 0.600, 0.200, 2.000, 5.000, 1.000, 5.000, 409.000, 1.000, 3.000, 21.000, 0.600, 0.070, 0.040, 0.100, 0.001, 0.001, 0.000, 3.000, 2.000, 2.000, 0.600, 0.600, 0.800, 1.000, 1.000, 3.000, 0.000, 0.600, 0.700, 0.700, 1.000, 0.400, 0.500, 0.015, 0.050, 1.000, 3.000, 2.000, 2.000, 0.600, 0.600, 0.800, 1.000, 0.400, 0.600, 1.000, 0.150, 0.100, 0.150, 0.290, 0.400, 0.445, 0.334, 3.021, -0.100, 2.373, 0.061, 510.403, 6.013, 26.971, 1.000, 56.560, 0.900, 0.400}
        initial_params:arr = {2.000, 2.000, 0.050, 0.200, 0.100, 2.000, 6.000, 1.000, 4.000, 170.000, 1.000, 2.000, 5.000, 1.000, 0.080, 0.080, 0.100, 0.001, 0.300, 0.000, 0.000, 0.241, 1.000, 2.000, 1.000, 0.600, 0.600, 0.600, 1.000, 1.000, 3.000, 0.000, 0.600, 0.700, 0.600, 1.250, 0.400, 0.500, 0.015, 0.050, 1.000, 3.000, 1.000, 2.000, 0.600, 0.600, 0.600, 1.000, 0.100, 0.600, 1.000, 0.150, 0.100, 0.150, 
                              0.251, 0.200, 
                              0.482, 0.353, 2.745, 0.053, 2.831, -0.004, 0.000, 10.500, 10.000, 1.000, 1.000, 0.100, 0.650}
      }
    }
  }

  texture_optimization_settings
  {
    optimization_stages:i = 0

    stage_material_selection
    {
      optimizer:s = "adam"
      iterations:i = 20
      lr:r = 0.02
      texture_lr:r = 0.25
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 256     
    }

    stage_0
    {
      optimizer:s = "adam"
      iterations:i = 75
      lr:r = 0.01
      texture_lr:r = 0.2
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 256     
    }
  }
}
