{
  //list of reference images
  count:i = 1000

  reference:s = "resources/textures/DishesData/plate_10.jpg"
  reference:s = "resources/textures/DishesData/plate_9.jpg"

  reference:s = "resources/textures/DishesData/cup_1.jpg"
  reference:s = "resources/textures/DishesData/cup_2.jpg"
  reference:s = "resources/textures/DishesData/cup_3.jpg"
  reference:s = "resources/textures/DishesData/cup_4.jpg"
  reference:s = "resources/textures/DishesData/cup_5.jpg"
  reference:s = "resources/textures/DishesData/cup_6.jpg"

  reference:s = "resources/textures/DishesData/plate_1.jpg"
  reference:s = "resources/textures/DishesData/plate_2.jpg"
  reference:s = "resources/textures/DishesData/plate_3.jpg"
  reference:s = "resources/textures/DishesData/plate_4.jpg"
  reference:s = "resources/textures/DishesData/plate_5.jpg"
  reference:s = "resources/textures/DishesData/plate_6.jpg"
  reference:s = "resources/textures/DishesData/plate_7.jpg"
  reference:s = "resources/textures/DishesData/plate_8.jpg"
  reference:s = "resources/textures/DishesData/plate_9.jpg"
  reference:s = "resources/textures/DishesData/plate_10.jpg"

  memetic_classic
  {
    total_function_calls:i = 6000
    population_size:i = 20
    tournament_size:i = 12
    mutation_chance:r = 0.3
    mutation_power:r = 0.2
    local_search_iterations:i = 33
    local_search_learning_rate:r = 0.01
    start_search_iterations:i = 50
    start_search_learning_rate:r = 0.05
    recreation_diversity_thr:r = 3.0
    depth_reg_q:r = 0.0
    min_iter_between_recreations:i = 100
  }

  DE
  {
    generations:i = 8
    population_size:i = 8
    local_search_iterations:i = 40
    local_search_learning_rate:r = 0.5
    crossover_rate:r = 0.3
    K:r = 0.7
    verbose:b = true
  }

  grid_search_adam
  {
    start_points_count:i = 2
    local_search_iterations:i = 160
    local_search_learning_rate:r = 0.33
    verbose:b = true
  }

  adam
  {
    iterations:i = 150
    learning_rate:r = 0.01
    verbose:b = true
    initial_params:arr = {3.318, 3.634, 3.873, 4.091, 4.220, 4.309, 4.356, 4.4, 4.4, 1.0, 0.987, 0.041, 0.477, 0.223, 0.225, 0.277, 0.296, 0.310, 0.317, 0.310, 0.302, 0.296, 0.289, 0.287, 0.286, 0.291, 0.295, 0.306, 0.317, 0.326, 0.345, 0.364, 0.375, 1.991, 1.990, 1.209, 1.221, 1.190, 1.201, 1.153, 1.131, 1.088, 1.048, 0.998, 0.952, 0.899, 0.853, 0.826, 0.842, 0.831, 0.930, 1.098, 1.690, 
                          -0.149, 0.573, 1.774, 0.3, 2.945, 0.012, 510.403, 6.013, 26.971, 1.000, 56.560, 0.9, 0.25}
  }
  
  //which procedural generator is used to create models. Currently only "dishes" is available
  procedural_generator:s = "dishes"

  //a .blk file describing parameters for scene, such as camera position, light etc.
  scene_description:s = "diff_gen_scene_parameters_description.blk"


  //if synthetic_reference is true, reference image will be ignored. Instead of it, a model with reference_params
  //will be created, rendered and saved to file. This new file will be used as reference for texture_optimization
  //reference_params contains model paramters and reference_scene contains scene paramters
  synthetic_reference:b = false
  reference_params:arr = {3.078, 3.534, 3.847, 4.112, 4.312, 4.429, 4.560, 4.636, 4.638, 1.149, 1.000, 0.041, 0.548, 
                          0.100, 0.368, 0.479, 0.328, 0.228, 0.241, 0.431, 0.435, 0.297, 0.297, 0.297, 0.212, 0.212, 0.212, 0.222, 0.222, 0.222, 0.384, 0.384, 0.384,
                          1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, }
  reference_scene:arr = {0.136, 0.545, 0.112, 0.091, -0.395, 0.019, 0, 0.5, 10, 1, 150, 0.1}
  reference_image_size:i = 512

  regularization_alpha:r = 1
  original_reference_size:i = 1024
  model_material:s = "" //leave empty to autoselect material (will take a few minutes)
  save_intermediate_images:b = true

  silhouette_optimization_settings
  {
    optimization_stages:i = 3

    stage_0
    {
      optimizer:s = "adam"
      iterations:i = 0 //not used in 0 block
      lr:r = 0 //not used in 0 block
      model_quality:i = 0
      render_image_size:i = 512
      spp:i = 1
    }
    stage_1
    {
      optimizer:s = "adam"
      iterations:i = 100
      lr:r = 0.005
      model_quality:i = 0
      render_image_size:i = 256
      spp:i = 1
    }
    stage_2
    {
      optimizer:s = "adam"
      iterations:i = 100
      lr:r = 0.005
      model_quality:i = 1
      render_image_size:i = 512
      spp:i = 1
    }
  }

  texture_optimization_settings
  {
    optimization_stages:i = 3

    stage_material_selection
    {
      optimizer:s = "adam"
      iterations:i = 20
      lr:r = 0.02
      texture_lr:r = 0.25
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 256     
    }

    stage_0
    {
      optimizer:s = "adam"
      iterations:i = 75
      lr:r = 1
      texture_lr:r = 0.4
      model_quality:i = 0
      render_image_size:i = 128
      spp:i = 256     
    }

    stage_1
    {
      optimizer:s = "adam"
      iterations:i = 75
      lr:r = 1
      texture_lr:r = 0.3
      model_quality:i = 1
      render_image_size:i = 256
      spp:i = 512     
    }

    stage_2
    {
      optimizer:s = "adam"
      iterations:i = 40
      lr:r = 1
      texture_lr:r = 0.3
      model_quality:i = 1
      render_image_size:i = 512
      spp:i = 512     
    }
  }
}
