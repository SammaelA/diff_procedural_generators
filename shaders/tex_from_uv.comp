#version 430

layout( local_size_x = 1, local_size_y = 1) in;

layout(rgba8, binding = 2) writeonly uniform image2D tex;
layout(rgba8, binding = 3) writeonly uniform image2D mask;

uniform sampler2D photo;
uniform sampler2D uv;
uniform vec2 tex_size;
void main()
{
    vec2 coord = gl_GlobalInvocationID.xy / tex_size;
    float q = texelFetch(uv, ivec2(tex_size*coord), 0).a;
    if (q > 0)
    {
      float importance = 1.0/max(0.01, texelFetch(uv, ivec2(tex_size*coord), 0).b*length(tex_size));
      vec2 uv_coords = texture(uv,coord).rg;
      vec4 color = texture(photo, coord);
      imageStore(tex, ivec2(tex_size*uv_coords), color);
      imageStore(mask, ivec2(tex_size*uv_coords), importance*color.aaaa);
    }
}
